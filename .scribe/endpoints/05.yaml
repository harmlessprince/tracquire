name: Password
description: |-

  API endpoints for managing authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/forgot-password
    metadata:
      title: 'Forgot Password'
      description: 'A token will be sent to user email address'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the  user.'
        required: true
        example: johndoes@example.com
        type: string
        custom: []
    responses:
      -
        status: 401
        content: |-
          {
          "status":"error",
          "data":[],
          "message":"The supplied email does not exist",
          "code":404
          }
        headers: []
        description: '401, Email Does Not Exist'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/auth/reset-password
    metadata:
      title: 'Reset Password'
      description: 'User is expected to supply the token sent to his email address and a new password'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The token sent to the user.'
        required: true
        example: voluptatem
        type: string
        custom: []
      email:
        name: email
        description: 'The user email address.'
        required: true
        example: aliquam
        type: string
        custom: []
      password:
        name: password
        description: 'The the user new password.'
        required: true
        example: voluptatibus
        type: string
        custom: []
    responses:
      -
        status: 401
        content: |-
          {
          "status":"error",
          "data":[],
          "message":"Token supplied is invalid",
          "code":404
          }
        headers: []
        description: '401, Email Does Not Exist'
    responseFields: []
